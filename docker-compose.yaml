
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    ports:
      - "8000:8000"
    command: [
      "bash",
      "-c",
      "poetry run alembic upgrade head && poetry run uvicorn app.main:app --reload --port 8000 --host 0.0.0.0"
    ]
    depends_on:
      - redis
      - db
    volumes:
      - ./app:/usr/src/app/app
      - ./frontend:/usr/src/app/frontend
      - ./migrations:/usr/src/app/migrations
      - ./media:/usr/src/app/media
      - ./poetry.lock:/usr/src/app/poetry.lock
      - ./pyproject.toml:/usr/src/app/pyproject.toml
  redis:
    container_name: redis
    image: redis:latest
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "6379:6379"
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/frontend
      - ./media:/media
    depends_on:
      - api
  db:
    image: postgres:16
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST = ${DB_HOST}
      - POSTGRES_PORT = ${DB_PORT}
    volumes:
      - ./data/db:/var/lib/postgresql/data
  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:3-management"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - api
      - rabbitmq
      - redis
    command: [
      "bash",
      "-c",
      "poetry run celery -A app.infrastructure.celery_settings.app worker --loglevel=info"
    ]
    volumes:
      - ./app:/usr/src/app/app
